services:
  postgres:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: /usr/local/bin/postgres-mock
    ports:
      - "5430:5432"

  cplane:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: /usr/local/bin/cplane-mock
    environment:
      PROXY_COMPUTE_ADDR: "postgres:5432"
    ports:
      - "3000:3000"

  haproxy:
    build:
      context: .
      dockerfile: haproxy.Dockerfile
    ports:
      - "5432:5432"

  proxy:
    image: "neondatabase/neon:release-4604"
    environment:
      PROXY_COMPUTE_ADDR: "postgres:5431"
    command:
      - proxy
      - --auth-backend
      - console
      - --auth-endpoint
      - "http://cplane:3000/authenticate_proxy_request"
      - -c
      - proxy.crt
      - -k
      - proxy.key
      - --proxy
      - "0.0.0.0:5431"
      - --mgmt
      - "0.0.0.0:8080"
    ports:
      - "5431:5431"
    volumes:
      - type: bind
        source: target/proxy.crt
        target: /data/proxy.crt
      - type: bind
        source: target/proxy.key
        target: /data/proxy.key


volumes:
  db-data:
    driver: flocker
    driver_opts:
      size: "10GiB"

configs:
  httpd-config:
    external: true

secrets:
  server-certificate:
    external: true

networks:
  # The presence of these objects is sufficient to define them
  front-tier: {}
  back-tier: {}
