services:
  postgres:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: /usr/local/bin/postgres-mock
    scale: 1

  cplane:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: /usr/local/bin/cplane-mock
    scale: 1
    environment:
      PROXY_COMPUTE_ADDR: "postgres:5432"

  load:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: /usr/local/bin/postgres-bench
    scale: 8
    environment:
      PG_HOST: "neon"
      PG_ADDR: "proxy:5432"
      PG_CONNECTION_RATE: "100"
      PG_CONNECTING_MAX: "100"
      PG_CONNECTION_MAX: "200"
    depends_on:
      - proxy

  # haproxy:
  #   image: haproxy:2.9
  #   scale: 4
  #   depends_on:
  #     - proxy
  #   volumes:
  #     - type: bind
  #       source: haproxy.cfg
  #       target: /usr/local/etc/haproxy/haproxy.cfg

  proxy:
    image: "neondatabase/neon:release-4604"
    command:
      - proxy
      - --auth-backend
      - console
      - --auth-endpoint
      - "http://cplane:3000/authenticate_proxy_request"
      - -c
      - proxy.crt
      - -k
      - proxy.key
      - --proxy
      - "0.0.0.0:5432"
      - --mgmt
      - "0.0.0.0:8080"
      - --wss
      - "0.0.0.0:4443"
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jaeger:4318"
    volumes:
      - type: bind
        source: target/proxy.crt
        target: /data/proxy.crt
      - type: bind
        source: target/proxy.key
        target: /data/proxy.key
    depends_on:
      - cplane
      - postgres
      - jaeger

  jaeger:
    image: jaegertracing/all-in-one:latest
